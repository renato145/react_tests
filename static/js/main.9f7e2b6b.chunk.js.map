{"version":3,"sources":["useAuData.js","AxisBottom.js","AxisLeft.js","Marks.js","index.js","skin_cancer_au.csv"],"names":["reAge","sortAges","d","b","res","exec","padStart","AxisBottom","xScale","innerHeight","tickOffset","ticks","map","tickValue","className","key","transform","y2","style","textAnchor","dy","y","AxisLeft","yScale","innerWidth","i","x2","x","d3","require","Marks","data","sex","xValue","yValue","path","useRef","useEffect","select","current","transition","duration","attr","line","curve","curveBasis","filter","Sex","ref","fill","stroke","margin","ReactDOM","render","Year","n","useState","setData","csv","src","then","csvdata","allData","years","Set","sexs","ages","Age","sort","useAuData","age","setAge","procData","useMemo","filteredData","maxN","max","scaleLinear","domain","extent","range","nice","onChange","e","target","value","width","height","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9f7e2b6b.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { csv } from 'd3';\nimport src from './skin_cancer_au.csv';\n\nconst reAge = /(\\d+)?.*/;\n\nconst sortAges = (d, b) => {\n  const res = reAge.exec(d)[1];\n  return res ? res.padStart(2, '0') : d;\n};\n\nexport const useAuData = () => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    csv(src).then(csvdata => {\n      setData({\n        allData: csvdata,\n        years: [...new Set(csvdata.map(d => d.Year))],\n        sexs: [...new Set(csvdata.map(d => d.Sex))],\n        ages: [...new Set(csvdata.map(d => d.Age))].sort(sortAges),\n      });\n    });\n  }, []);\n  \n  return data;\n};\n","import React from 'react';\n\nexport const AxisBottom = ({ xScale, innerHeight, tickOffset = 3 }) =>\n  xScale.ticks().map(tickValue => (\n    <g\n      className=\"tick\"\n      key={tickValue}\n      transform={`translate(${xScale(tickValue)},0)`}\n    >\n      <line y2={innerHeight} />\n      <text style={{ textAnchor: 'middle' }} dy=\".71em\" y={innerHeight + tickOffset}>\n        {tickValue}\n      </text>\n    </g>\n  ));\n","import React from 'react';\n\nexport const AxisLeft = ({ yScale, innerWidth, tickOffset = 3 }) =>\n  yScale.ticks().map((tickValue, i) => (\n    <g key={i} className='tick' transform={`translate(0,${yScale(tickValue)})`}>\n      <line x2={innerWidth} />\n      <text\n        key={tickValue}\n        style={{ textAnchor: 'end' }}\n        x={-tickOffset}\n        dy='.32em'\n      >\n        {tickValue}\n      </text>\n    </g>\n  ));\n","import React, { useEffect, useRef } from 'react';\nconst d3 = require('d3');\n\nexport const Marks = ({ data, sex, xScale, yScale, xValue, yValue }) => {\n  const path = useRef(null);\n  useEffect(() => {\n    d3.select(path.current)\n      .transition().duration(1000)\n      .attr('d', () =>\n        d3.line()\n          .x(d => xScale(xValue(d)))\n          .y(d => yScale(yValue(d)))\n          .curve(d3.curveBasis)(data.filter(d => d.Sex === sex))\n      );\n  }, [ data, sex, xScale, yScale, xValue, yValue ]);\n  return (\n    <g className='marks'>\n      <path\n        className={sex}\n        ref={path}\n        fill='none'\n        stroke='black'\n      />\n    </g>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { useAuData } from './useAuData';\nimport { AxisBottom } from './AxisBottom';\nimport { AxisLeft } from './AxisLeft';\nimport { Marks } from './Marks';\nconst d3 = require('d3');\n\nconst width = 960;\nconst height = 500;\nconst margin = { top: 20, right: 30, bottom: 65, left: 90 };\nconst xAxisLabelOffset = 50;\nconst yAxisLabelOffset = 45;\n\nconst App = () => {\n  const xAxisLabel = 'Year';\n  const xValue = d => +d.Year;\n  const yAxisLabel = 'Deaths';\n  const yValue = d => +d.n;\n  const innerHeight = height - margin.top - margin.bottom;\n  const innerWidth = width - margin.left - margin.right;\n\n  const data = useAuData();\n  const [ age, setAge ] = useState('All ages');\n  const procData = useMemo(() => {\n    if(data){\n      const { allData, years, sexs, ages } = data;\n      const filteredData = allData.filter(d => d.Age===age);\n      const maxN = d3.max(filteredData.map(d => +d.n));\n\n      const xScale = d3.scaleLinear()\n        .domain(d3.extent(years))\n        .range([0, innerWidth])\n        .nice();\n\n      const yScale = d3.scaleLinear()\n        .domain([0,maxN])\n        .range([innerHeight, 0])\n        .nice();\n\n      return {\n        filteredData, years, sexs, ages, xScale, yScale,\n      };\n    }\n  }, [data, age]);\n\n  if(!data){\n    return <pre>Loading...</pre>;\n  }\n  const { filteredData, years, sexs, ages, xScale, yScale } = procData;\n\n  return (\n    <div>\n      <div className=\"title\">Skin cancer on Australia</div>\n      <div className=\"selector\">\n        <label>Age</label>\n        <select onChange={e => setAge(e.target.value)} value={age}>\n          {ages.map(d => (\n            <option key={d} value={d}>{d}</option>\n          ))}\n        </select>\n      </div>\n      <div>Query: {age}</div>\n      <svg width={width} height={height}>\n        <g transform={`translate(${margin.left},${margin.top})`}>\n          <AxisBottom\n            xScale={xScale}\n            innerHeight={innerHeight}\n            tickOffset={7}\n          />\n          <text\n            className='axis-label'\n            textAnchor='middle'\n            transform={`translate(${-yAxisLabelOffset},${innerHeight / 2}) rotate(-90)`}\n          >\n            {yAxisLabel}\n          </text>\n          <AxisLeft yScale={yScale} innerWidth={innerWidth} tickOffset={7} />\n          <text\n            className=\"axis-label\"\n            x={innerWidth / 2}\n            y={innerHeight + xAxisLabelOffset}\n            textAnchor=\"middle\"\n          >\n            {xAxisLabel}\n          </text>\n          <Marks\n            data={filteredData}\n            sex=\"Male\"\n            xScale={xScale}\n            yScale={yScale}\n            xValue={xValue}\n            yValue={yValue}\n          />\n          <Marks\n            data={filteredData}\n            sex=\"Female\"\n            xScale={xScale}\n            yScale={yScale}\n            xValue={xValue}\n            yValue={yValue}\n          />\n        </g>\n      </svg>\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/skin_cancer_au.52f45d7d.csv\";"],"sourceRoot":""}